proxy:
  title: Shinyproxy em Produção
  landing-page: /
  # template-path: ./templates
  heartbeat-rate: 10000
  heartbeat-timeout: 50000
  bind-address: 0.0.0.0
  container-wait-time: 60000
  hide-navbar: false 
  port: 8080
  
  # authentication: none
  # authentication: simple
  authentication: openid # use openid auth framework
  openid:
    roles-claim: cognito:groups
    auth-url: https:/${DOMAIN}/oauth2/authorize
    token-url:  https:/${DOMAIN}/oauth2/token
    jwks-url: https://cognito-idp.${REGION}.amazonaws.com/${POOL_ID}/.well-known/jwks.json
    logout-url: https:/${DOMAIN}/logout?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT}&response_type=code&logout_uri=${REDIRECT}
    client-id: ${CLIENT_ID}
    client-secret: ${CLIENT_SECRET}

  # users:
  # - name: admin
  #   password: admin
  #   groups: [ admin ]
  # - name: user
  #   password: user
  #   groups: [ user ]

  docker:
    internal-networking: true
    container-network: matrix

  specs:
    - id: distshiny
      display-name: Distribuições de Probabilidade
      container-cmd: ["R", "-e", "shiny::runApp('/root/app', port = 3838, host = '0.0.0.0')"]
      container-image: distshiny
      access-groups: [admins]
      container-network: "${proxy.docker.container-network}"
    - id: bloodbanks
      display-name: Localizando bancos de sangue na Índia
      container-cmd: ["R", "-e", "shiny::runApp('/root/app', port = 3838, host = '0.0.0.0')"]
      container-image: bloodbanks
      access-groups: [admins]
      container-network: "${proxy.docker.container-network}"

server:
  forward-headers-strategy: native
  useForwardHeaders: true